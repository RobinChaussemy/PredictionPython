install.packages(c("devtools", "usethis", "roxygen2"))
add <- function(x,y){
return(x+y)
}
add(2,6)
x <- 1
double <- function(){
return(2*x)
}
double()
x <- 8
double <- function(){
return(2*x)
}
double()
source(eigen)
eigen()
KKN_Python <- function(indiv_prediction,n = Int(11), p = Int(3)){
return(list(prediction = TRUE, proba = c(0.2,0.8),temps = 0.5))
}
p <- KKN_Python(c("kk",2),2,3)
View(p)
p$proba
KKN_Python <- function(indiv_prediction,n = Int(11), p = Int(3)){
return(list(prediction = TRUE, proba = c(0.2,0.8),temps = 0.5))
}
KKN_Python <- function(indiv_prediction,n = Int(11), p = Int(3)){
return(list(prediction = TRUE, proba = c(0.2,0.8),temps = 0.5))
}
KKN_Python <- function(indiv_prediction,n = Int(11), p = Int(3)){
return(list(prediction = TRUE, proba = c(0.2,0.8),temps = 0.5))
}
use_virtualenv("/Python/venv")
install.packages("~/Documents/FAC/M1SSD.nosync/ProjetMLM1Robin/PredictionPython_1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Documents/FAC/M1SSD.nosync/ProjetMLM1Robin/PredictionPython_1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Documents/FAC/M1SSD.nosync/ProjetMLM1Robin/PredictionPython_1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Documents/FAC/M1SSD.nosync/ProjetMLM1Robin/PredictionPython_1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Documents/FAC/M1SSD.nosync/ProjetMLM1Robin/PredictionPython_1.0.tar.gz", repos = NULL, type = "source")
install.packages("devtools")
pwd()
devtools::load_all("/Users/robinchaussemy/Documents/FAC/M1SSD.nosync/ProjetMLM1Robin/PredictionPython")
library(PredictionPython)
library(PredictionPython)
PredictionPython::.onload()
devtools::build()
library(PredictionPython)
PredictionPython::.onload()
library(PredictionPython)
library(PredictionPython)
library(PredictionPython)
library(PredictionPython)
library(PredictionPython)
detach("package:PredictionPython", unload = TRUE)
library(PredictionPython)
KNN_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11 , p = 3)
PredictionPython::KNN_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11 , p = 3)
use_virtualenv("../Python/venv")
library(reticulate)
use_virtualenv("../Python/venv")
source_python("../Python/main.py")
python <- source_python("../Python/main.py")
library(PredictionPython)
detach("package:PredictionPython", unload = TRUE)
library(PredictionPython)
KNN_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11 , p = 3)
detach("package:PredictionPython", unload = TRUE)
library(PredictionPython)
KNN_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11 , p = 3)
RandomForest_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11)
library(PredictionPython)
library(PredictionPython)
KNN_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11 , p = 3)
KNN_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11 , p = 3)
RandomForest_Python(c("Ama Dablam","Autumn","France","Climber",2025,1,1,1,1,1,1,1), n = 11)
devtools::document()
library(PredictionPython)
library(PredictionPython)
getwd()
paste0(getwd(),"/Python/main.py")
library(PredictionPython)
library(PredictionPython)
library(PredictionPython)
install.packages(c("bookdown", "brew", "brio", "bslib", "cli", "cluster", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "datawizard", "DBI", "desc", "diptest", "dplyr", "DT", "e1071", "emmeans", "FactoInvestigate", "Factoshiny", "fansi", "foreign", "fpc", "future", "future.apply", "gert", "GGally", "ggridges", "gtools", "haven", "htmlwidgets", "httpuv", "httr2", "insight", "later", "magick", "markdown", "Matrix", "mgcv", "missMDA", "mvtnorm", "nlme", "ordinal", "pkgbuild", "processx", "progress", "R.utils", "ragg", "RcppArmadillo", "recipes", "rgl", "robustbase", "rpart", "rsconnect", "sandwich", "sass", "scales", "shiny", "sp", "stringi", "svglite", "testthat", "timeDate", "tinytex", "tseries", "TTR", "ucminf", "vctrs", "vroom", "xml2", "yaml", "yulab.utils"))
library(shiny)
runApp("R/app.R")
runApp("R/app.r")
runApp("R/app.r")
library(PredictionPython)
